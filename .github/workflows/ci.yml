name: Docker Image CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "LICENSE"
  release:
    types: [published]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: sandeshy
      IMAGE_NAME: torwebsite

    steps:
      - uses: actions/checkout@v2

      - name: Set image tag for release
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set image tag for main & PR
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Docker build
        run: |
          docker build -t $DOCKER_USER/$IMAGE_NAME:${{env.IMAGE_TAG}} .
          docker image save $DOCKER_USER/$IMAGE_NAME:${{env.IMAGE_TAG}} > ${{env.IMAGE_TAG}}.tar

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ${{env.IMAGE_TAG}}.tar

  push:
    if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
    needs: build
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: sandeshy
      IMAGE_NAME: torwebsite

    steps:
      - uses: actions/download-artifact@v2
        name: Download artifacts
        with:
          name: build

      - name: Load image
        run: docker image load < *.tar

      - name: Docker login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

      - name: Docker push
        run: |
          TAG=`basename --suffix .tar *.tar`
          docker push $DOCKER_USER/$IMAGE_NAME:$TAG
